server.port=8282

# Keycloak Configuration

keycloak.auth-server-url=http://localhost:8080
keycloak.realm=GestionMaterielSpringKeycloak
keycloak.resource=login-webapp-gestionmateriel
keycloak.public-client=true
keycloak.principal-attribute=preferred_username

# We consider the Keycloak client as an OAuth Client. So,
# we need to configure the WebApp GestionMateriel to use the OAuth Client.
#The ClientRegistration class holds all of the basic information about the client. Spring auto-configuration
# looks for properties with the schema spring.security.oauth2.client.registration.[registrationId] and
# registers a client with OAuth 2.0 or OpenID Connect (OIDC).
#
#Let's configure the client registration configuration:
spring.security.oauth2.client.registration.keycloak.client-id=login-webapp-gestionmateriel
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.scope=openid


# The value we specify in client-id matches the client we named in the admin console.
# The Spring Boot application needs to interact with an OAuth 2.0 or OIDC provider to handle the actual request
# logic for different grant types. So, we need to configure the OIDC provider. It can be auto-configured
# based on property values with the schema spring.security.oauth2.client.provider.[provider name].
# Let's configure the OIDC provider configuration :

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/GestionMaterielSpringKeycloak
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username



# To See H2 Console in Browser:
# http://localhost:8080/h2-console
# Enabling H2 Console
spring.h2.console.enabled=true

# ==============================================================
# = Data Source
# ==============================================================

spring.datasource.url=jdbc:h2:mem:materieldb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# ===============================
# JPA / HIBERNATE
# ===============================

# ==============================================================
# = Show or not log for each sql query
# ==============================================================
spring.jpa.show-sql=true

# ==============================================================
# = Hibernate ddl auto (create, create-drop, update)
# ==============================================================
spring.jpa.hibernate.ddl-auto=update

# ==============================================================
# = The SQL dialect makes Hibernate generate better SQL for the chosen database
# ==============================================================
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect

# ==============================================================
# = Keep the connection alive if idle for a long time (needed in production)
# ==============================================================
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1

#spring.jpa.defer-datasource-initialization=true

mes-configs.limitDeProduits= 4

